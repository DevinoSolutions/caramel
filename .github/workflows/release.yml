name: Release â€“ Caramel Extension

on:
  push:
    branches: [ main ]

env:
  SAFARI_BUNDLE_ID: ${{ vars.SAFARI_BUNDLE_ID }}
  VERSION_NAME: 1.0.${{ github.run_number }}
  BUILD_NUM: ${{ github.run_id }}                    # always > any previous build number
  MAC_CATEGORY: public.app-category.productivity     # valid Mac-App-Store UTI

jobs:
  package:
    name: "ðŸ“¦ Package Extension"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: caramel-extension
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: caramel-extension/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Build extension
        run: pnpm run build

      - name: Package extension
        run: pnpm run package

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: caramel-extension/extension.zip

  publish_chrome:
    name: "ðŸš€ Publish to Chrome Web Store"
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-package
          path: .

      - name: Upload to Chrome Web Store (upload-only)
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: extension.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: false

  publish_safari:
    name: "ðŸš€ Publish to Apple App Store (Safari & iOS)"
    needs: package
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: caramel-extension
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-package
          path: caramel-extension

      - name: Unzip extension
        run: unzip -q extension.zip

      # ------- App Store Connect API key -------
      - name: Install App Store Connect API key
        run: echo "${ASC_API_KEY_BASE64}" | base64 --decode > /tmp/AuthKey.p8
        env:
          ASC_API_KEY_BASE64: ${{ secrets.ASC_API_KEY_BASE64 }}

      # ------- Certificates -------
      - name: Import distribution cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT_P12 }}
          p12-password:    ${{ secrets.APPLE_CERT_PASSWORD }}
          keychain: signing_temp
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Import development cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          create-keychain: false
          keychain: signing_temp
          p12-file-base64: ${{ secrets.APPLE_DEV_CERT_P12 }}
          p12-password:    ${{ secrets.APPLE_DEV_CERT_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      # ------- Convert web-extension -------
      - name: Convert to Safari app (macOS & iOS)
        run: |
          xcrun safari-web-extension-converter dist \
            --project-location SafariExtProject \
            --app-name "Caramel" \
            --bundle-identifier "${SAFARI_BUNDLE_ID}" \
            --no-open --no-prompt --force --copy-resources

      # ---------- macOS Info.plist Category patch ----------
      - name: Patch macOS Info.plist LSApplicationCategoryType
        run: |
          # add or update LSApplicationCategoryType in every Info.plist under the macOS target
          find SafariExtProject/Caramel -name Info.plist -print0 | while IFS= read -r -d '' plist; do
            /usr/libexec/PlistBuddy -c "Add :LSApplicationCategoryType string ${MAC_CATEGORY}" "$plist" 2>/dev/null \
              || /usr/libexec/PlistBuddy -c "Set :LSApplicationCategoryType ${MAC_CATEGORY}" "$plist"
          done

      # ---------- macOS archive (universal) ----------
      - name: Build & archive (macOS)
        run: |
          xcodebuild archive \
            -project SafariExtProject/Caramel/Caramel.xcodeproj \
            -scheme "Caramel (macOS)" \
            -configuration Release \
            -archivePath SafariExtProject/Caramel-macos.xcarchive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}" \
            MARKETING_VERSION="${{ env.VERSION_NAME }}" \
            CURRENT_PROJECT_VERSION="${{ env.BUILD_NUM }}" \
            ARCHS="arm64 x86_64" \
            VALID_ARCHS="arm64 x86_64" \
            ONLY_ACTIVE_ARCH=NO \
            ENABLE_HARDENED_RUNTIME=YES \
            -allowProvisioningUpdates \
            -authenticationKeyPath /tmp/AuthKey.p8 \
            -authenticationKeyID "${{ secrets.ASC_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"

      # ---------- iOS archive ----------
      - name: Build & archive (iOS)
        run: |
          xcodebuild archive \
            -project SafariExtProject/Caramel/Caramel.xcodeproj \
            -scheme "Caramel (iOS)" \
            -destination "generic/platform=iOS" \
            -configuration Release \
            -archivePath SafariExtProject/Caramel-ios.xcarchive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}" \
            MARKETING_VERSION="${{ env.VERSION_NAME }}" \
            CURRENT_PROJECT_VERSION="${{ env.BUILD_NUM }}" \
            ENABLE_HARDENED_RUNTIME=YES \
            -allowProvisioningUpdates \
            -authenticationKeyPath /tmp/AuthKey.p8 \
            -authenticationKeyID "${{ secrets.ASC_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"

      # ---------- write exportOptions plists ----------
      - name: Write exportOptions (macOS)
        run: |
          cat > /tmp/exportOptionsMac.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store-connect</string>
            <key>signingStyle</key><string>automatic</string>
            <key>teamID</key><string>${{ secrets.APPLE_TEAM_ID }}</string>
          </dict>
          </plist>
          EOF

      - name: Write exportOptions (iOS)
        run: |
          cat > /tmp/exportOptionsIOS.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store-connect</string>
            <key>signingStyle</key><string>automatic</string>
            <key>teamID</key><string>${{ secrets.APPLE_TEAM_ID }}</string>
          </dict>
          </plist>
          EOF

      # ---------- exports ----------
      - name: Export (macOS)
        run: |
          xcodebuild -exportArchive \
            -archivePath SafariExtProject/Caramel-macos.xcarchive \
            -exportOptionsPlist /tmp/exportOptionsMac.plist \
            -exportPath SafariExtProject/Exported-macos \
            -allowProvisioningUpdates \
            -authenticationKeyPath /tmp/AuthKey.p8 \
            -authenticationKeyID "${{ secrets.ASC_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"

      - name: Export (iOS)
        run: |
          xcodebuild -exportArchive \
            -archivePath SafariExtProject/Caramel-ios.xcarchive \
            -exportOptionsPlist /tmp/exportOptionsIOS.plist \
            -exportPath SafariExtProject/Exported-ios \
            -allowProvisioningUpdates \
            -authenticationKeyPath /tmp/AuthKey.p8 \
            -authenticationKeyID "${{ secrets.ASC_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"

      # ---------- uploads ----------
      - name: Upload macOS pkg to App Store Connect
        env:
          ALTOOL_USER: ${{ secrets.APPLE_ID }}
          ALTOOL_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
        run: |
          xcrun altool --upload-app \
            -f SafariExtProject/Exported-macos/Caramel.pkg \
            -t osx -u "$ALTOOL_USER" -p "$ALTOOL_PASSWORD" --verbose

      - name: Upload iOS ipa to App Store Connect
        env:
          ALTOOL_USER: ${{ secrets.APPLE_ID }}
          ALTOOL_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
        run: |
          xcrun altool --upload-app \
            -f SafariExtProject/Exported-ios/Caramel.ipa \
            -t ios -u "$ALTOOL_USER" -p "$ALTOOL_PASSWORD" --verbose
